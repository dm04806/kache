USE_OCAMLFIND = true
OCAMLPACKS[] = lwt.unix lwt lwt.syntax teno atdgen

NATIVE_ENABLED = true
BYTE_ENABLED = true

OCAMLFINDFLAGS += -syntax camlp4o
OCAMLFLAGS  += -dtypes 

C_FILES = kache_client kache_types js_kache_types
S_FILES = kache_server kache_types lru dList

# protocol user biniou serialization
kache_types.ml kache_types.mli:  kache_types.atd
	atdgen -biniou kache_types.atd 

# .. however, for pretty-printing, use Json:
js_kache_types.ml js_kache_types.mli:  kache_types.atd 
	atdgen -open Kache_types -ntd -std-json -o js_kache_types kache_types.atd


OCAML_LIBS = kache
LIB = kache

.DEFAULT: \
  $(OCamlLibrary $(LIB), $(C_FILES) ) \
  $(OCamlProgram kachec, kachec ) \
  $(OCamlProgram kache_server, $(S_FILES) )

.PHONY:  clean

clean:
   rm -f $(filter-proper-targets $(ls R, .)) *.s *.annot